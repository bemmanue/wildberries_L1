package main

import (
	"fmt"
	"sync"
)

// square печатает в терминал квадрат числа
func square(n int, wg *sync.WaitGroup) {
	fmt.Printf("%d^2 = %d\n", n, n*n)
	wg.Done() // уменьшаем счетчик ожидаемых горутин
}

func main() {
	// создаем и инициализируем массив
	arr := [5]int{2, 4, 6, 8, 10}

	// создаем структуру WaitGroup, чтобы заставить главную горутину ожидать завершения запущенных в ней горутин
	var wg sync.WaitGroup

	// запускаем горутины, которые будут считать квадраты чисел и выводить результаты в терминал
	for _, n := range arr {
		wg.Add(1)         // увеличиваем счетчик ожидаемых горутин
		go square(n, &wg) // запускаем горутину
	}

	// ожидаем завершения запущенных ранее горутин
	wg.Wait()
}
